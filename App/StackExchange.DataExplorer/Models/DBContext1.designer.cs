#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StackExchange.DataExplorer.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataExplorerDev")]
	public partial class DBContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCachedResult(CachedResult instance);
    partial void UpdateCachedResult(CachedResult instance);
    partial void DeleteCachedResult(CachedResult instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertVote(Vote instance);
    partial void UpdateVote(Vote instance);
    partial void DeleteVote(Vote instance);
    partial void InsertUserOpenId(UserOpenId instance);
    partial void UpdateUserOpenId(UserOpenId instance);
    partial void DeleteUserOpenId(UserOpenId instance);
    partial void InsertOpenIdWhiteList(OpenIdWhiteList instance);
    partial void UpdateOpenIdWhiteList(OpenIdWhiteList instance);
    partial void DeleteOpenIdWhiteList(OpenIdWhiteList instance);
    partial void InsertAppSetting(AppSetting instance);
    partial void UpdateAppSetting(AppSetting instance);
    partial void DeleteAppSetting(AppSetting instance);
    partial void InsertBlackList(BlackList instance);
    partial void UpdateBlackList(BlackList instance);
    partial void DeleteBlackList(BlackList instance);
    partial void InsertQuery(Query instance);
    partial void UpdateQuery(Query instance);
    partial void DeleteQuery(Query instance);
    #endregion
		
		public DBContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AppConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CachedResult> CachedResults
		{
			get
			{
				return this.GetTable<CachedResult>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<Vote> Votes
		{
			get
			{
				return this.GetTable<Vote>();
			}
		}
		
		public System.Data.Linq.Table<UserOpenId> UserOpenIds
		{
			get
			{
				return this.GetTable<UserOpenId>();
			}
		}
		
		public System.Data.Linq.Table<OpenIdWhiteList> OpenIdWhiteLists
		{
			get
			{
				return this.GetTable<OpenIdWhiteList>();
			}
		}
		
		public System.Data.Linq.Table<AppSetting> AppSettings
		{
			get
			{
				return this.GetTable<AppSetting>();
			}
		}
		
		public System.Data.Linq.Table<BlackList> BlackLists
		{
			get
			{
				return this.GetTable<BlackList>();
			}
		}
		
		public System.Data.Linq.Table<Query> Queries
		{
			get
			{
				return this.GetTable<Query>();
			}
		}
		
		public System.Data.Linq.Table<QueryExecution> QueryExecutions
		{
			get
			{
				return this.GetTable<QueryExecution>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CachedResults")]
	public partial class CachedResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QueryHash;
		
		private System.Nullable<int> _SiteId;
		
		private string _Results;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQueryHashChanging(System.Guid value);
    partial void OnQueryHashChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnResultsChanging(string value);
    partial void OnResultsChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public CachedResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryHash", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QueryHash
		{
			get
			{
				return this._QueryHash;
			}
			set
			{
				if ((this._QueryHash != value))
				{
					this.OnQueryHashChanging(value);
					this.SendPropertyChanging();
					this._QueryHash = value;
					this.SendPropertyChanged("QueryHash");
					this.OnQueryHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Results", DbType="NVarChar(MAX)")]
		public string Results
		{
			get
			{
				return this._Results;
			}
			set
			{
				if ((this._Results != value))
				{
					this.OnResultsChanging(value);
					this.SendPropertyChanging();
					this._Results = value;
					this.SendPropertyChanged("Results");
					this.OnResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Login;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private bool _IsAdmin;
		
		private string _IPAddress;
		
		private bool _IsModerator;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _AboutMe;
		
		private string _Website;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		private System.Nullable<System.DateTime> _LastSeenDate;
		
		private System.Nullable<bool> _HideSchema;
		
		private EntitySet<UserOpenId> _UserOpenIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnIsModeratorChanging(bool value);
    partial void OnIsModeratorChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnLastActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityDateChanged();
    partial void OnLastSeenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSeenDateChanged();
    partial void OnHideSchemaChanging(System.Nullable<bool> value);
    partial void OnHideSchemaChanged();
    #endregion
		
		public User()
		{
			this._UserOpenIds = new EntitySet<UserOpenId>(new Action<UserOpenId>(this.attach_UserOpenIds), new Action<UserOpenId>(this.detach_UserOpenIds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModerator", DbType="Bit NOT NULL")]
		public bool IsModerator
		{
			get
			{
				return this._IsModerator;
			}
			set
			{
				if ((this._IsModerator != value))
				{
					this.OnIsModeratorChanging(value);
					this.SendPropertyChanging();
					this._IsModerator = value;
					this.SendPropertyChanged("IsModerator");
					this.OnIsModeratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSeenDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSeenDate
		{
			get
			{
				return this._LastSeenDate;
			}
			set
			{
				if ((this._LastSeenDate != value))
				{
					this.OnLastSeenDateChanging(value);
					this.SendPropertyChanging();
					this._LastSeenDate = value;
					this.SendPropertyChanged("LastSeenDate");
					this.OnLastSeenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideSchema", DbType="Bit")]
		public System.Nullable<bool> HideSchema
		{
			get
			{
				return this._HideSchema;
			}
			set
			{
				if ((this._HideSchema != value))
				{
					this.OnHideSchemaChanging(value);
					this.SendPropertyChanging();
					this._HideSchema = value;
					this.SendPropertyChanged("HideSchema");
					this.OnHideSchemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOpenId", Storage="_UserOpenIds", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserOpenId> UserOpenIds
		{
			get
			{
				return this._UserOpenIds;
			}
			set
			{
				this._UserOpenIds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserOpenIds(UserOpenId entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserOpenIds(UserOpenId entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sites")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TinyName;
		
		private string _Name;
		
		private string _LongName;
		
		private string _Url;
		
		private string _ImageUrl;
		
		private string _IconUrl;
		
		private string _DatabaseName;
		
		private string _Tagline;
		
		private string _TagCss;
		
		private System.Nullable<int> _TotalQuestions;
		
		private System.Nullable<int> _TotalAnswers;
		
		private System.Nullable<int> _TotalUsers;
		
		private System.Nullable<int> _TotalComments;
		
		private System.Nullable<int> _TotalTags;
		
		private System.Nullable<System.DateTime> _LastPost;
		
		private string _ImageBackgroundColor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTinyNameChanging(string value);
    partial void OnTinyNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIconUrlChanging(string value);
    partial void OnIconUrlChanged();
    partial void OnDatabaseNameChanging(string value);
    partial void OnDatabaseNameChanged();
    partial void OnTaglineChanging(string value);
    partial void OnTaglineChanged();
    partial void OnTagCssChanging(string value);
    partial void OnTagCssChanged();
    partial void OnTotalQuestionsChanging(System.Nullable<int> value);
    partial void OnTotalQuestionsChanged();
    partial void OnTotalAnswersChanging(System.Nullable<int> value);
    partial void OnTotalAnswersChanged();
    partial void OnTotalUsersChanging(System.Nullable<int> value);
    partial void OnTotalUsersChanged();
    partial void OnTotalCommentsChanging(System.Nullable<int> value);
    partial void OnTotalCommentsChanged();
    partial void OnTotalTagsChanging(System.Nullable<int> value);
    partial void OnTotalTagsChanged();
    partial void OnLastPostChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostChanged();
    partial void OnImageBackgroundColorChanging(string value);
    partial void OnImageBackgroundColorChanged();
    #endregion
		
		public Site()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinyName", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string TinyName
		{
			get
			{
				return this._TinyName;
			}
			set
			{
				if ((this._TinyName != value))
				{
					this.OnTinyNameChanging(value);
					this.SendPropertyChanging();
					this._TinyName = value;
					this.SendPropertyChanged("TinyName");
					this.OnTinyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string IconUrl
		{
			get
			{
				return this._IconUrl;
			}
			set
			{
				if ((this._IconUrl != value))
				{
					this.OnIconUrlChanging(value);
					this.SendPropertyChanging();
					this._IconUrl = value;
					this.SendPropertyChanged("IconUrl");
					this.OnIconUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DatabaseName
		{
			get
			{
				return this._DatabaseName;
			}
			set
			{
				if ((this._DatabaseName != value))
				{
					this.OnDatabaseNameChanging(value);
					this.SendPropertyChanging();
					this._DatabaseName = value;
					this.SendPropertyChanged("DatabaseName");
					this.OnDatabaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tagline", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Tagline
		{
			get
			{
				return this._Tagline;
			}
			set
			{
				if ((this._Tagline != value))
				{
					this.OnTaglineChanging(value);
					this.SendPropertyChanging();
					this._Tagline = value;
					this.SendPropertyChanged("Tagline");
					this.OnTaglineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagCss", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TagCss
		{
			get
			{
				return this._TagCss;
			}
			set
			{
				if ((this._TagCss != value))
				{
					this.OnTagCssChanging(value);
					this.SendPropertyChanging();
					this._TagCss = value;
					this.SendPropertyChanged("TagCss");
					this.OnTagCssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuestions", DbType="Int")]
		public System.Nullable<int> TotalQuestions
		{
			get
			{
				return this._TotalQuestions;
			}
			set
			{
				if ((this._TotalQuestions != value))
				{
					this.OnTotalQuestionsChanging(value);
					this.SendPropertyChanging();
					this._TotalQuestions = value;
					this.SendPropertyChanged("TotalQuestions");
					this.OnTotalQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAnswers", DbType="Int")]
		public System.Nullable<int> TotalAnswers
		{
			get
			{
				return this._TotalAnswers;
			}
			set
			{
				if ((this._TotalAnswers != value))
				{
					this.OnTotalAnswersChanging(value);
					this.SendPropertyChanging();
					this._TotalAnswers = value;
					this.SendPropertyChanged("TotalAnswers");
					this.OnTotalAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUsers", DbType="Int")]
		public System.Nullable<int> TotalUsers
		{
			get
			{
				return this._TotalUsers;
			}
			set
			{
				if ((this._TotalUsers != value))
				{
					this.OnTotalUsersChanging(value);
					this.SendPropertyChanging();
					this._TotalUsers = value;
					this.SendPropertyChanged("TotalUsers");
					this.OnTotalUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalComments", DbType="Int")]
		public System.Nullable<int> TotalComments
		{
			get
			{
				return this._TotalComments;
			}
			set
			{
				if ((this._TotalComments != value))
				{
					this.OnTotalCommentsChanging(value);
					this.SendPropertyChanging();
					this._TotalComments = value;
					this.SendPropertyChanged("TotalComments");
					this.OnTotalCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTags", DbType="Int")]
		public System.Nullable<int> TotalTags
		{
			get
			{
				return this._TotalTags;
			}
			set
			{
				if ((this._TotalTags != value))
				{
					this.OnTotalTagsChanging(value);
					this.SendPropertyChanging();
					this._TotalTags = value;
					this.SendPropertyChanged("TotalTags");
					this.OnTotalTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPost", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPost
		{
			get
			{
				return this._LastPost;
			}
			set
			{
				if ((this._LastPost != value))
				{
					this.OnLastPostChanging(value);
					this.SendPropertyChanging();
					this._LastPost = value;
					this.SendPropertyChanged("LastPost");
					this.OnLastPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageBackgroundColor", DbType="varchar(6)", UpdateCheck=UpdateCheck.Never)]
		public string ImageBackgroundColor
		{
			get
			{
				return this._ImageBackgroundColor;
			}
			set
			{
				if ((this._ImageBackgroundColor != value))
				{
					this.OnImageBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._ImageBackgroundColor = value;
					this.SendPropertyChanged("ImageBackgroundColor");
					this.OnImageBackgroundColorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Votes")]
	public partial class Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SavedQueryId;
		
		private int _UserId;
		
		private int _VoteTypeId;
		
		private System.DateTime _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSavedQueryIdChanging(int value);
    partial void OnSavedQueryIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnVoteTypeIdChanging(int value);
    partial void OnVoteTypeIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Vote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedQueryId", DbType="Int NOT NULL")]
		public int SavedQueryId
		{
			get
			{
				return this._SavedQueryId;
			}
			set
			{
				if ((this._SavedQueryId != value))
				{
					this.OnSavedQueryIdChanging(value);
					this.SendPropertyChanging();
					this._SavedQueryId = value;
					this.SendPropertyChanged("SavedQueryId");
					this.OnSavedQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteTypeId", DbType="Int NOT NULL")]
		public int VoteTypeId
		{
			get
			{
				return this._VoteTypeId;
			}
			set
			{
				if ((this._VoteTypeId != value))
				{
					this.OnVoteTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VoteTypeId = value;
					this.SendPropertyChanged("VoteTypeId");
					this.OnVoteTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserOpenId")]
	public partial class UserOpenId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private string _OpenIdClaim;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnOpenIdClaimChanging(string value);
    partial void OnOpenIdClaimChanged();
    #endregion
		
		public UserOpenId()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenIdClaim", DbType="NVarChar(450)")]
		public string OpenIdClaim
		{
			get
			{
				return this._OpenIdClaim;
			}
			set
			{
				if ((this._OpenIdClaim != value))
				{
					this.OnOpenIdClaimChanging(value);
					this.SendPropertyChanging();
					this._OpenIdClaim = value;
					this.SendPropertyChanged("OpenIdClaim");
					this.OnOpenIdClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOpenId", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserOpenIds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserOpenIds.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OpenIdWhiteList")]
	public partial class OpenIdWhiteList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _OpenId;
		
		private bool _Approved;
		
		private string _IpAddress;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOpenIdChanging(string value);
    partial void OnOpenIdChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public OpenIdWhiteList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenId", DbType="NVarChar(450)")]
		public string OpenId
		{
			get
			{
				return this._OpenId;
			}
			set
			{
				if ((this._OpenId != value))
				{
					this.OnOpenIdChanging(value);
					this.SendPropertyChanging();
					this._OpenId = value;
					this.SendPropertyChanged("OpenId");
					this.OnOpenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="VarChar(20)")]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppSettings")]
	public partial class AppSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Setting;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSettingChanging(string value);
    partial void OnSettingChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AppSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setting", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Setting
		{
			get
			{
				return this._Setting;
			}
			set
			{
				if ((this._Setting != value))
				{
					this.OnSettingChanging(value);
					this.SendPropertyChanging();
					this._Setting = value;
					this.SendPropertyChanged("Setting");
					this.OnSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlackList")]
	public partial class BlackList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IPAddress;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public BlackList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Queries")]
	public partial class Query : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _QueryHash;
		
		private string _QueryBody;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQueryHashChanging(System.Guid value);
    partial void OnQueryHashChanged();
    partial void OnQueryBodyChanging(string value);
    partial void OnQueryBodyChanged();
    #endregion
		
		public Query()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryHash", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QueryHash
		{
			get
			{
				return this._QueryHash;
			}
			set
			{
				if ((this._QueryHash != value))
				{
					this.OnQueryHashChanging(value);
					this.SendPropertyChanging();
					this._QueryHash = value;
					this.SendPropertyChanged("QueryHash");
					this.OnQueryHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string QueryBody
		{
			get
			{
				return this._QueryBody;
			}
			set
			{
				if ((this._QueryBody != value))
				{
					this.OnQueryBodyChanging(value);
					this.SendPropertyChanging();
					this._QueryBody = value;
					this.SendPropertyChanged("QueryBody");
					this.OnQueryBodyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QueryExecutions")]
	public partial class QueryExecution
	{
		
		private int _ID;
		
		private int _RevisionID;
		
		private System.Nullable<int> _UserID;
		
		private int _SiteID;
		
		private System.DateTime _FirstRun;
		
		private System.DateTime _LastRun;
		
		private int _ExecutionCount;
		
		public QueryExecution()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionID", DbType="Int NOT NULL")]
		public int QueryId
		{
			get
			{
				return this._RevisionID;
			}
			set
			{
				if ((this._RevisionID != value))
				{
					this._RevisionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteId
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRun", DbType="DateTime NOT NULL")]
		public System.DateTime FirstRun
		{
			get
			{
				return this._FirstRun;
			}
			set
			{
				if ((this._FirstRun != value))
				{
					this._FirstRun = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRun", DbType="DateTime NOT NULL")]
		public System.DateTime LastRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this._LastRun = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionCount", DbType="Int NOT NULL")]
		public int ExecutionCount
		{
			get
			{
				return this._ExecutionCount;
			}
			set
			{
				if ((this._ExecutionCount != value))
				{
					this._ExecutionCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
